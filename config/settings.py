"""
Django settings for hello_world project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os

import dotenv
from pathlib import Path
from common.utils import get_env_var

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

dotenv.load_dotenv(BASE_DIR / '.env')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_env_var('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_rest_passwordreset',
    'rest_framework',
    'corsheaders',
    'accounts',
    'payments',
    'data',
    'djstripe',

]

MIDDLEWARE = [
    'config.middleware.Auth0Middleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'csp.middleware.CSPMiddleware',
]

# Auth user
AUTH_USER_MODEL = "accounts.CustomUser"

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/staticfiles/'
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_ROOT = BASE_DIR / 'staticfiles'

STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Security

CLIENT_ORIGIN_URL = get_env_var('CLIENT_ORIGIN_URL')

CORS_ALLOWED_ORIGINS = [
    CLIENT_ORIGIN_URL,

    # STRIPE
    "https://3.18.12.63",
    "https://3.130.192.231",
    "https://13.235.14.237",
    "https://13.235.122.149",
    "https://18.211.135.69",
    "https://35.154.171.200",
    "https://52.15.183.38",
    "https://54.88.130.119",
    "https://54.88.130.237",
    "https://54.187.174.169",
    "https://54.187.205.235",
    "https://54.187.216.72"
]

CORS_ALLOW_METHODS = [
    "GET",
]

CORS_ALLOW_HEADERS = [
    "authorization",
    "content-type",
]

SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_SECONDS = 31536000

CSP_FRAME_ANCESTORS = "'none'"

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTTokenUserAuthentication',
    ],
}

# JWT

AUTH0_DOMAIN = get_env_var('AUTH0_DOMAIN')
AUTH0_AUDIENCE = get_env_var('AUTH0_AUDIENCE')

SIMPLE_JWT = {
    'ALGORITHM': 'RS256',
    'JWK_URL': f'https://{AUTH0_DOMAIN}/.well-known/jwks.json',
    'AUDIENCE': AUTH0_AUDIENCE,
    'ISSUER': f'https://{AUTH0_DOMAIN}/',
    'USER_ID_CLAIM': 'sub',
    'AUTH_TOKEN_CLASSES': ('authz.tokens.Auth0Token',),
}

# STRIPE_PUBLISHABLE_KEY_TEST = "pk_test_51M6hOpAkLES5P4qQRx2fORUAAi49KDKe4ONatn8bOSK3J9nOyDPUsLmTfumYNt4YSHC3P80HEfpmt5vbezszrTXG00ii2eiDQx"

# STRIPE_LIVE_SECRET_KEY = "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"
STRIPE_TEST_SECRET_KEY = "sk_test_51M6hOpAkLES5P4qQAZDooT8j3D8YMNobTBdMvcEERrrW1kqoVFgVij2TTHhoShVGlfAvsibtdB8u0cJ2hlInYLGl00NzfWUvo8"
STRIPE_LIVE_MODE = False

DJSTRIPE_WEBHOOK_SECRET = "whsec_N8LMT9fUTcrtlEBvKaHLKTnXWLE2uybj"
DJSTRIPE_FOREIGN_KEY_TO_FIELD = "id"

DJSTRIPE_WEBHOOK_VALIDATION='retrieve_event'

# CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
# CELERY_BROKER_URL = CELERY_RESULT_BACKEND
# CELERY_TIMEZONE = 'US/Central'
# CELERYD_TASK_TIME_LIMIT= 10
# CELERY_TASK_RESULT_EXPIRES = 10

# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': 'channels_redis.core.RedisChannelLayer',
#         'CONFIG': {
#             "hosts": [os.environ.get(CELERY_BROKER_URL)],
#         },
#     },
# }

# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": os.environ.get(CELERY_BROKER_URL),
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#             # "CONNECTION_POOL_KWARGS": {
#             #     "ssl_cert_reqs": ssl.CERT_NONE,
#             # },
#         }
#     }
# }

SCRAPFLY_KEY = get_env_var('SCRAPFLY_KEY')